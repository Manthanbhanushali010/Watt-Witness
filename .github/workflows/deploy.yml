name: Deploy WattWitness to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install Python dependencies
      run: |
        cd RaspberryPi/backend
        pip install -r requirements.txt
    
    - name: Install Node.js dependencies
      run: |
        cd RaspberryPi/frontend
        npm install
    
    - name: Run Python tests
      run: |
        cd RaspberryPi/backend
        if [ -d "tests" ]; then
          python -m pytest tests/ -v
        else
          echo "No tests found"
        fi
    
    - name: Build frontend
      run: |
        cd RaspberryPi/frontend
        npm run build
    
    - name: Lint frontend
      run: |
        cd RaspberryPi/frontend
        npm run lint

  deploy-frontend:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        cd RaspberryPi/frontend
        npm install
    
    - name: Build frontend
      run: |
        cd RaspberryPi/frontend
        npm run build
             env:
         VITE_API_URL: https://wattwitness-backend.onrender.com
         VITE_APP_NAME: WattWitness
         VITE_ENVIRONMENT: production
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        zeit-token: ${{ secrets.VERCEL_TOKEN }}
        working-directory: RaspberryPi/frontend
        vercel-args: '--prod'

  deploy-backend:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Render
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}
        
  notify:
    needs: [deploy-frontend, deploy-backend]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Deployment Success Notification
      if: needs.deploy-frontend.result == 'success' && needs.deploy-backend.result == 'success'
      run: |
        echo "üéâ WattWitness deployment completed successfully!"
        echo "Frontend: https://wattwitness.com"
        echo "Backend: https://api.wattwitness.com"
    
    - name: Deployment Failure Notification
      if: needs.deploy-frontend.result == 'failure' || needs.deploy-backend.result == 'failure'
      run: |
        echo "‚ùå WattWitness deployment failed!"
        echo "Check the logs for more details." 